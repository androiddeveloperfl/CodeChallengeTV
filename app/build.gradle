plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id "org.jlleitschuh.gradle.ktlint" version "11.3.2"
    id "io.gitlab.arturbosch.detekt" version "1.23.0"
}

android {
    namespace 'com.weathergroup.codechallengetv'
    compileSdk 33

    defaultConfig {
        applicationId "com.weathergroup.codechallengetv"
        minSdk 24
        targetSdk 33
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
        freeCompilerArgs += "-Xopt-in=androidx.tv.tvMaterial3.ExperimentalTvMaterial3Api"
        freeCompilerArgs += "-Xopt-in=androidx.tv.material3.ExperimentalTvMaterial3Api"
        freeCompilerArgs += "-Xopt-in=androidx.tv.foundation.ExperimentalTvFoundationApi"
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion '1.3.2'
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
}

tasks.getByPath("preBuild").dependsOn("ktlintFormat")

ktlint {
    android = true
    ignoreFailures = true
    reporters {
        reporter "plain"
        reporter "checkstyle"
        reporter "sarif"
    }
}

detekt {
    parallel = true
    config.setFrom(file("${rootProject.rootDir}/config/detekt/detekt.yml"))
    buildUponDefaultConfig = true
    allRules = true
    autoCorrect = true
    setSource(files(projectDir))
}

dependencies {
    implementation 'androidx.compose.material3:material3-window-size-class:1.1.0'
    implementation 'androidx.compose.material3:material3:1.1.0'
    def tv_compose_version = "1.0.0-SNAPSHOT"
    def lifecycle_runtime_ktx_version = '2.6.1'
    def compose_activity_version = '1.7.2'
    def splash_screen_version = '1.0.1'
    def nav_version = "2.5.3"
    def gson_version = '2.10.1'
    def media3_version = '1.1.0-alpha01'

    implementation 'androidx.core:core-ktx:1.10.1'
    implementation platform('org.jetbrains.kotlin:kotlin-bom:1.8.0')
    implementation("androidx.lifecycle:lifecycle-runtime-ktx:$lifecycle_runtime_ktx_version")
    implementation("androidx.activity:activity-compose:$compose_activity_version")
    implementation("androidx.compose.ui:ui:$compose_version")
    implementation("androidx.compose.ui:ui-tooling-preview:$compose_version")

    // extra material icons
    implementation("androidx.compose.material:material-icons-extended:$compose_version")

    // TV Compose
    implementation("androidx.tv:tv-foundation:$tv_compose_version")
    implementation("androidx.tv:tv-material:$tv_compose_version")
    implementation('androidx.lifecycle:lifecycle-viewmodel-compose:2.6.1')

    // Compose Navigation
    implementation("androidx.navigation:navigation-compose:$nav_version")

    // Coil
    implementation('io.coil-kt:coil-compose:2.4.0')

    // GSON
    implementation("com.google.code.gson:gson:$gson_version")

    // Media3
    implementation("androidx.media3:media3-exoplayer:$media3_version")
    implementation("androidx.media3:media3-ui:$media3_version")
    implementation "androidx.media3:media3-exoplayer-hls:$media3_version"

    // SplashScreen
    implementation("androidx.core:core-splashscreen:$splash_screen_version")
}
